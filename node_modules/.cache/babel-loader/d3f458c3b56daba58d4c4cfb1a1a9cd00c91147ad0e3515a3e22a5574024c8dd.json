{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\progoogle\\\\Downloads\\\\ecoraiz-visual\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport ImageGrid from './components/ImageGrid';\nimport DataTable from './components/DataTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultZones = Array(9).fill({\n  pH: '',\n  humidity: '',\n  moisture: ''\n});\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [zones, setZones] = useState(defaultZones);\n  const [ranks, setRanks] = useState([]);\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    const url = URL.createObjectURL(file);\n    setImage(url);\n    setZones(defaultZones);\n    setRanks([]);\n  };\n  const handleChange = (index, field, value) => {\n    const updated = [...zones];\n    updated[index] = {\n      ...updated[index],\n      [field]: parseFloat(value) || ''\n    };\n    setZones(updated);\n  };\n  const analyze = () => {\n    const scored = zones.map((z, i) => {\n      let score = 0;\n      if (z.pH >= 6 && z.pH <= 7.5) score++;\n      if (z.humidity >= 40 && z.humidity <= 70) score++;\n      if (z.moisture >= 30 && z.moisture <= 60) score++;\n      return {\n        index: i,\n        score\n      };\n    });\n    scored.sort((a, b) => b.score - a.score);\n    const rankList = Array(9).fill(null);\n    scored.forEach((zone, rank) => {\n      rankList[zone.index] = rank;\n    });\n    setRanks(rankList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF31 Ecoraiz - Visual Growth Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout\",\n      children: [image && /*#__PURE__*/_jsxDEV(ImageGrid, {\n        image: image,\n        ranks: ranks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        zones: zones,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: analyze,\n      children: \"Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+MgTOFVOwW6xKGCdQ6WnFh2StcA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ImageGrid","DataTable","jsxDEV","_jsxDEV","defaultZones","Array","fill","pH","humidity","moisture","App","_s","image","setImage","zones","setZones","ranks","setRanks","handleImageUpload","e","file","target","files","url","URL","createObjectURL","handleChange","index","field","value","updated","parseFloat","analyze","scored","map","z","i","score","sort","a","b","rankList","forEach","zone","rank","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/progoogle/Downloads/ecoraiz-visual/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport ImageGrid from './components/ImageGrid';\nimport DataTable from './components/DataTable';\n\nconst defaultZones = Array(9).fill({ pH: '', humidity: '', moisture: '' });\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [zones, setZones] = useState(defaultZones);\n  const [ranks, setRanks] = useState([]);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    const url = URL.createObjectURL(file);\n    setImage(url);\n    setZones(defaultZones);\n    setRanks([]);\n  };\n\n  const handleChange = (index, field, value) => {\n    const updated = [...zones];\n    updated[index] = { ...updated[index], [field]: parseFloat(value) || '' };\n    setZones(updated);\n  };\n\n  const analyze = () => {\n    const scored = zones.map((z, i) => {\n      let score = 0;\n      if (z.pH >= 6 && z.pH <= 7.5) score++;\n      if (z.humidity >= 40 && z.humidity <= 70) score++;\n      if (z.moisture >= 30 && z.moisture <= 60) score++;\n      return { index: i, score };\n    });\n\n    scored.sort((a, b) => b.score - a.score);\n    const rankList = Array(9).fill(null);\n    scored.forEach((zone, rank) => {\n      rankList[zone.index] = rank;\n    });\n    setRanks(rankList);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>ðŸŒ± Ecoraiz - Visual Growth Analyzer</h1>\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\n      <div className=\"layout\">\n        {image && <ImageGrid image={image} ranks={ranks} />}\n        <DataTable zones={zones} onChange={handleChange} />\n      </div>\n      <button onClick={analyze}>Analyze</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}