{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\progoogle\\\\Downloads\\\\ecoraiz-visual\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport ImageGrid from './components/ImageGrid';\nimport DataTable from './components/DataTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultZones = Array(9).fill({\n  pH: '',\n  humidity: '',\n  moisture: ''\n});\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [zones, setZones] = useState(defaultZones);\n  const [ranks, setRanks] = useState([]);\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    const url = URL.createObjectURL(file);\n    setImage(url);\n    setZones(defaultZones);\n    setRanks([]);\n  };\n  const handleChange = (index, field, value) => {\n    const updated = [...zones];\n    updated[index] = {\n      ...updated[index],\n      [field]: parseFloat(value) || ''\n    };\n    setZones(updated);\n  };\n  const forestSpeciesDB = [{\n    name: 'Neem Tree 🌳',\n    role: 'Medicinal, air purification',\n    lifespan: '100+ years',\n    pH: [6.0, 8.0],\n    humidity: [30, 60],\n    moisture: [20, 40]\n  }, {\n    name: 'Banyan Tree 🌳',\n    role: 'Shade provider, sacred, biodiversity hub',\n    lifespan: '200+ years',\n    pH: [6.0, 7.5],\n    humidity: [50, 90],\n    moisture: [40, 70]\n  }, {\n    name: 'Peepal Tree 🌿',\n    role: 'Oxygen producer, sacred',\n    lifespan: '150+ years',\n    pH: [6.0, 7.5],\n    humidity: [30, 70],\n    moisture: [20, 50]\n  }, {\n    name: 'Teak Tree 🌲',\n    role: 'Timber, canopy coverage',\n    lifespan: '100+ years',\n    pH: [6.5, 7.5],\n    humidity: [40, 70],\n    moisture: [30, 50]\n  }, {\n    name: 'Jamun Tree 🍇',\n    role: 'Fruit-bearing, wildlife support',\n    lifespan: '80–100 years',\n    pH: [6.0, 7.5],\n    humidity: [60, 85],\n    moisture: [30, 60]\n  }, {\n    name: 'Mango Tree 🥭',\n    role: 'Fruit, shade, bird support',\n    lifespan: '100–150 years',\n    pH: [6.0, 7.5],\n    humidity: [50, 80],\n    moisture: [40, 60]\n  }, {\n    name: 'Indian Rosewood 🌸',\n    role: 'Timber, medicinal, canopy',\n    lifespan: '100–120 years',\n    pH: [6.0, 8.0],\n    humidity: [40, 80],\n    moisture: [30, 60]\n  }, {\n    name: 'Bael Tree 🍐',\n    role: 'Medicinal, fruit-bearing',\n    lifespan: '100+ years',\n    pH: [6.0, 8.0],\n    humidity: [40, 70],\n    moisture: [30, 50]\n  }, {\n    name: 'Indian Mahogany 🌳',\n    role: 'Hardwood, biodiversity',\n    lifespan: '120+ years',\n    pH: [6.0, 7.5],\n    humidity: [60, 85],\n    moisture: [40, 65]\n  }, {\n    name: 'Sandalwood Tree 🌳',\n    role: 'Medicinal, aromatic wood',\n    lifespan: '100–200 years',\n    pH: [6.0, 7.0],\n    humidity: [40, 70],\n    moisture: [30, 50]\n  }, {\n    name: 'Arjuna Tree 🌳',\n    role: 'Water bank stabilizer, medicinal',\n    lifespan: '100+ years',\n    pH: [6.0, 7.5],\n    humidity: [40, 80],\n    moisture: [30, 60]\n  }, {\n    name: 'Rudraksha Tree 🔮',\n    role: 'Spiritual, shade',\n    lifespan: '100+ years',\n    pH: [6.0, 7.5],\n    humidity: [50, 85],\n    moisture: [30, 50]\n  }, {\n    name: 'Sal Tree 🌳',\n    role: 'Sacred, hardwood, forest native',\n    lifespan: '100–150 years',\n    pH: [5.5, 7.0],\n    humidity: [60, 80],\n    moisture: [40, 60]\n  }, {\n    name: 'Jackfruit Tree 🌳',\n    role: 'Fruit, shade, support birds',\n    lifespan: '100+ years',\n    pH: [6.0, 7.5],\n    humidity: [50, 80],\n    moisture: [40, 60]\n  }, {\n    name: 'Deodar Cedar 🌲',\n    role: 'Windbreak, canopy, sacred',\n    lifespan: '200+ years',\n    pH: [6.0, 7.5],\n    humidity: [50, 80],\n    moisture: [30, 60]\n  }, {\n    name: 'Chestnut Tree 🌰',\n    role: 'Nut bearing, wildlife support',\n    lifespan: '200+ years',\n    pH: [5.5, 7.5],\n    humidity: [40, 70],\n    moisture: [30, 60]\n  }, {\n    name: 'Oak Tree 🌳',\n    role: 'Biodiversity shelter, large canopy',\n    lifespan: '200+ years',\n    pH: [5.5, 7.0],\n    humidity: [50, 80],\n    moisture: [40, 70]\n  }, {\n    name: 'Cork Tree 🌲',\n    role: 'Fire-resistant, bark use',\n    lifespan: '100+ years',\n    pH: [6.0, 7.0],\n    humidity: [30, 60],\n    moisture: [20, 50]\n  }, {\n    name: 'Tamarind Tree 🌳',\n    role: 'Fruit, shade, medicinal',\n    lifespan: '80–100 years',\n    pH: [6.0, 8.0],\n    humidity: [50, 80],\n    moisture: [40, 60]\n  }, {\n    name: 'Khejri Tree 🌿',\n    role: 'Desert stabilizer, sacred',\n    lifespan: '100–120 years',\n    pH: [7.0, 8.5],\n    humidity: [20, 60],\n    moisture: [10, 30]\n  }\n  // You can copy & extend more entries similarly to reach 40+\n  ];\n  const getForestSuggestions = zone => {\n    const suitable = forestSpeciesDB.filter(tree => {\n      const [minPH, maxPH] = tree.pH;\n      const [minHum, maxHum] = tree.humidity;\n      const [minMoist, maxMoist] = tree.moisture;\n      return zone.pH >= minPH && zone.pH <= maxPH && zone.humidity >= minHum && zone.humidity <= maxHum && zone.moisture >= minMoist && zone.moisture <= maxMoist;\n    });\n    return suitable.map(t => `${t.name} (${t.role})`).join(', ') || '❌ No suitable match';\n  };\n  const analyze = () => {\n    const scored = zones.map((z, i) => {\n      let score = 0;\n      if (z.pH >= 6 && z.pH <= 7.5) score++;\n      if (z.humidity >= 40 && z.humidity <= 70) score++;\n      if (z.moisture >= 30 && z.moisture <= 60) score++;\n      return {\n        index: i,\n        score\n      };\n    });\n    scored.sort((a, b) => b.score - a.score);\n    const rankList = Array(9).fill(null);\n    scored.forEach((zone, rank) => {\n      rankList[zone.index] = rank;\n    });\n    setRanks(rankList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDF3F Ecoraiz \\u2013 Reforestation Zone Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Find high-growth areas on your map using AI & environmental data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [10.1235, 78.2345],\n        zoom: 14,\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 OpenStreetMap contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), zones.map((zone, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [zone.latitude, zone.longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Suitable Planting Area #\", zone.location_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+MgTOFVOwW6xKGCdQ6WnFh2StcA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ImageGrid","DataTable","jsxDEV","_jsxDEV","defaultZones","Array","fill","pH","humidity","moisture","App","_s","image","setImage","zones","setZones","ranks","setRanks","handleImageUpload","e","file","target","files","url","URL","createObjectURL","handleChange","index","field","value","updated","parseFloat","forestSpeciesDB","name","role","lifespan","getForestSuggestions","zone","suitable","filter","tree","minPH","maxPH","minHum","maxHum","minMoist","maxMoist","map","t","join","analyze","scored","z","i","score","sort","a","b","rankList","forEach","rank","className","children","fileName","_jsxFileName","lineNumber","columnNumber","MapContainer","center","zoom","TileLayer","attribution","idx","Marker","position","latitude","longitude","Popup","location_id","_c","$RefreshReg$"],"sources":["C:/Users/progoogle/Downloads/ecoraiz-visual/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport ImageGrid from './components/ImageGrid';\nimport DataTable from './components/DataTable';\n\nconst defaultZones = Array(9).fill({ pH: '', humidity: '', moisture: '' });\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [zones, setZones] = useState(defaultZones);\n  const [ranks, setRanks] = useState([]);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    const url = URL.createObjectURL(file);\n    setImage(url);\n    setZones(defaultZones);\n    setRanks([]);\n  };\n\n  const handleChange = (index, field, value) => {\n    const updated = [...zones];\n    updated[index] = { ...updated[index], [field]: parseFloat(value) || '' };\n    setZones(updated);\n  };\n\n  const forestSpeciesDB = [\n    {\n      name: 'Neem Tree 🌳',\n      role: 'Medicinal, air purification',\n      lifespan: '100+ years',\n      pH: [6.0, 8.0],\n      humidity: [30, 60],\n      moisture: [20, 40],\n    },\n    {\n      name: 'Banyan Tree 🌳',\n      role: 'Shade provider, sacred, biodiversity hub',\n      lifespan: '200+ years',\n      pH: [6.0, 7.5],\n      humidity: [50, 90],\n      moisture: [40, 70],\n    },\n    {\n      name: 'Peepal Tree 🌿',\n      role: 'Oxygen producer, sacred',\n      lifespan: '150+ years',\n      pH: [6.0, 7.5],\n      humidity: [30, 70],\n      moisture: [20, 50],\n    },\n    {\n      name: 'Teak Tree 🌲',\n      role: 'Timber, canopy coverage',\n      lifespan: '100+ years',\n      pH: [6.5, 7.5],\n      humidity: [40, 70],\n      moisture: [30, 50],\n    },\n    {\n      name: 'Jamun Tree 🍇',\n      role: 'Fruit-bearing, wildlife support',\n      lifespan: '80–100 years',\n      pH: [6.0, 7.5],\n      humidity: [60, 85],\n      moisture: [30, 60],\n    },\n    {\n      name: 'Mango Tree 🥭',\n      role: 'Fruit, shade, bird support',\n      lifespan: '100–150 years',\n      pH: [6.0, 7.5],\n      humidity: [50, 80],\n      moisture: [40, 60],\n    },\n    {\n      name: 'Indian Rosewood 🌸',\n      role: 'Timber, medicinal, canopy',\n      lifespan: '100–120 years',\n      pH: [6.0, 8.0],\n      humidity: [40, 80],\n      moisture: [30, 60],\n    },\n    {\n      name: 'Bael Tree 🍐',\n      role: 'Medicinal, fruit-bearing',\n      lifespan: '100+ years',\n      pH: [6.0, 8.0],\n      humidity: [40, 70],\n      moisture: [30, 50],\n    },\n    {\n      name: 'Indian Mahogany 🌳',\n      role: 'Hardwood, biodiversity',\n      lifespan: '120+ years',\n      pH: [6.0, 7.5],\n      humidity: [60, 85],\n      moisture: [40, 65],\n    },\n    {\n      name: 'Sandalwood Tree 🌳',\n      role: 'Medicinal, aromatic wood',\n      lifespan: '100–200 years',\n      pH: [6.0, 7.0],\n      humidity: [40, 70],\n      moisture: [30, 50],\n    },\n    {\n      name: 'Arjuna Tree 🌳',\n      role: 'Water bank stabilizer, medicinal',\n      lifespan: '100+ years',\n      pH: [6.0, 7.5],\n      humidity: [40, 80],\n      moisture: [30, 60],\n    },\n    {\n      name: 'Rudraksha Tree 🔮',\n      role: 'Spiritual, shade',\n      lifespan: '100+ years',\n      pH: [6.0, 7.5],\n      humidity: [50, 85],\n      moisture: [30, 50],\n    },\n    {\n      name: 'Sal Tree 🌳',\n      role: 'Sacred, hardwood, forest native',\n      lifespan: '100–150 years',\n      pH: [5.5, 7.0],\n      humidity: [60, 80],\n      moisture: [40, 60],\n    },\n    {\n      name: 'Jackfruit Tree 🌳',\n      role: 'Fruit, shade, support birds',\n      lifespan: '100+ years',\n      pH: [6.0, 7.5],\n      humidity: [50, 80],\n      moisture: [40, 60],\n    },\n    {\n      name: 'Deodar Cedar 🌲',\n      role: 'Windbreak, canopy, sacred',\n      lifespan: '200+ years',\n      pH: [6.0, 7.5],\n      humidity: [50, 80],\n      moisture: [30, 60],\n    },\n    {\n      name: 'Chestnut Tree 🌰',\n      role: 'Nut bearing, wildlife support',\n      lifespan: '200+ years',\n      pH: [5.5, 7.5],\n      humidity: [40, 70],\n      moisture: [30, 60],\n    },\n    {\n      name: 'Oak Tree 🌳',\n      role: 'Biodiversity shelter, large canopy',\n      lifespan: '200+ years',\n      pH: [5.5, 7.0],\n      humidity: [50, 80],\n      moisture: [40, 70],\n    },\n    {\n      name: 'Cork Tree 🌲',\n      role: 'Fire-resistant, bark use',\n      lifespan: '100+ years',\n      pH: [6.0, 7.0],\n      humidity: [30, 60],\n      moisture: [20, 50],\n    },\n    {\n      name: 'Tamarind Tree 🌳',\n      role: 'Fruit, shade, medicinal',\n      lifespan: '80–100 years',\n      pH: [6.0, 8.0],\n      humidity: [50, 80],\n      moisture: [40, 60],\n    },\n    {\n      name: 'Khejri Tree 🌿',\n      role: 'Desert stabilizer, sacred',\n      lifespan: '100–120 years',\n      pH: [7.0, 8.5],\n      humidity: [20, 60],\n      moisture: [10, 30],\n    }\n    // You can copy & extend more entries similarly to reach 40+\n  ];\n  \n\n  const getForestSuggestions = (zone) => {\n    const suitable = forestSpeciesDB.filter((tree) => {\n      const [minPH, maxPH] = tree.pH;\n      const [minHum, maxHum] = tree.humidity;\n      const [minMoist, maxMoist] = tree.moisture;\n  \n      return (\n        zone.pH >= minPH && zone.pH <= maxPH &&\n        zone.humidity >= minHum && zone.humidity <= maxHum &&\n        zone.moisture >= minMoist && zone.moisture <= maxMoist\n      );\n    });\n  \n    return suitable.map(t => `${t.name} (${t.role})`).join(', ') || '❌ No suitable match';\n  };\n  \n\n  const analyze = () => {\n    const scored = zones.map((z, i) => {\n      let score = 0;\n      if (z.pH >= 6 && z.pH <= 7.5) score++;\n      if (z.humidity >= 40 && z.humidity <= 70) score++;\n      if (z.moisture >= 30 && z.moisture <= 60) score++;\n      return { index: i, score };\n    });\n\n    scored.sort((a, b) => b.score - a.score);\n    const rankList = Array(9).fill(null);\n    scored.forEach((zone, rank) => {\n      rankList[zone.index] = rank;\n    });\n    setRanks(rankList);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1>🌿 Ecoraiz – Reforestation Zone Planner</h1>\n        <p>Find high-growth areas on your map using AI & environmental data.</p>\n      </header>\n\n      <div className=\"map-container-wrapper\">\n        <MapContainer center={[10.1235, 78.2345]} zoom={14} className=\"map-container\">\n          <TileLayer\n            attribution='&copy; OpenStreetMap contributors'\n            url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n          />\n          {zones.map((zone, idx) => (\n            <Marker key={idx} position={[zone.latitude, zone.longitude]}>\n              <Popup>Suitable Planting Area #{zone.location_id}</Popup>\n            </Marker>\n          ))}\n        </MapContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}